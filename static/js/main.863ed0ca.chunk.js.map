{"version":3,"sources":["View/Header.js","View/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","className","classname","Header","forwardRef","nvgRef","useRef","useState","nvg","setNvg","handleClickOutside","target","current","contains","useEffect","window","addEventListener","console","log","removeEventListener","ref","undefined","onClick","href","style","color","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAIMA,EAAa,SAACC,GAClB,OACE,sBAAKC,UAAWD,EAAME,UAAtB,UACE,qBAAKD,UAAU,iBACf,qBAAKA,UAAU,WAAf,oBACA,sBAAKA,UAAU,WAAf,2CACO,uBADP,kEAGA,qBAAKA,UAAU,gBACf,wBAAQA,UAAU,WAAlB,gEACA,wBAAQA,UAAU,WAAlB,0DACA,wBAAQA,UAAU,WAAlB,2CAqDSE,EAhDAC,sBAAW,WACxB,IAAMC,EAASC,mBADe,EAERC,qBAFQ,mBAEvBC,EAFuB,KAElBC,EAFkB,KAIxBC,EAAqB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,aAARH,GAAuBH,EAAOO,QAAQC,SAASF,IACjDF,EAAO,cAWX,OARAK,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,QAASN,GACjCO,QAAQC,IAAIV,GACL,WACLO,OAAOI,oBAAoB,QAAST,OAKtC,sBAAKT,UAAU,SAAf,UACE,qBAAKA,UAAU,cAAcmB,IAAKf,EAAlC,SACGG,EAAM,cAAC,EAAD,CAAYN,UAAWM,SAAUa,IAE1C,wBACEpB,UAAU,cACVqB,QAAS,WACPb,EAAO,aAHX,SAME,cAAC,IAAD,MAEF,mBAAGR,UAAU,eAAesB,KAAK,4BAAjC,0DAGA,qBAAKtB,UAAU,eAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,mBACEsB,KAAK,4BACLZ,OAAO,SACPa,MAAO,CAAEC,MAAO,SAHlB,SAKE,cAAC,IAAD,gBCtCGC,MApBf,WACE,OACE,qBAAKzB,UAAU,YAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,cAAf,+DACA,sBAAKA,UAAU,eAAf,qCAEE,mBACEsB,KAAK,mDACLtB,UAAU,oBACVU,OAAO,SAHT,yE,MCKKgB,MATf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.863ed0ca.chunk.js","sourcesContent":["import React, { useState, useEffect, forwardRef, useRef } from \"react\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <div className={props.classname}>\r\n      <div className=\"nvg-icon-svg\"></div>\r\n      <div className=\"nvg-name\">WAQESD</div>\r\n      <div className=\"nvg-info\">\r\n        한양대학교<br></br>컴퓨터소프트웨어학부\r\n      </div>\r\n      <div className=\"nvg-divider\"></div>\r\n      <button className=\"nvg-menu\"> 진행중인 프로젝트</button>\r\n      <button className=\"nvg-menu\"> 완료된 프로젝트</button>\r\n      <button className=\"nvg-menu\"> 개발일지</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = forwardRef(() => {\r\n  const nvgRef = useRef();\r\n  const [nvg, setNvg] = useState();\r\n  let navigation = undefined;\r\n  const handleClickOutside = ({ target }) => {\r\n    if (nvg === \"nvg-open\" && !nvgRef.current.contains(target))\r\n      setNvg(\"nvg-close\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", handleClickOutside);\r\n    console.log(nvg);\r\n    return () => {\r\n      window.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"nvg-wrapper\" ref={nvgRef}>\r\n        {nvg ? <Navigation classname={nvg} /> : undefined}\r\n      </div>\r\n      <button\r\n        className=\"menu-button\"\r\n        onClick={() => {\r\n          setNvg(\"nvg-open\");\r\n        }}\r\n      >\r\n        <MenuIcon />\r\n      </button>\r\n      <a className=\"header-title\" href=\"https://waqesd.github.io/\">\r\n        WAQESD의 기술 블로그\r\n      </a>\r\n      <div className=\"header-icons\">\r\n        <button className=\"github-button\">\r\n          <a\r\n            href=\"https://github.com/WAQESD\"\r\n            target=\"_blink\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            <GitHubIcon />\r\n          </a>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Container() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container-h\">\r\n        <div className=\"first-title\">진행중인 프로젝트</div>\r\n        <div className=\"second-title\">\r\n          하루토론\r\n          <a\r\n            href=\"https://github.com/CommunityForTesting/Front-end\"\r\n            className=\"second-title-link\"\r\n            target=\"_blink\"\r\n          >\r\n            (https://github.com/CommunityForTesting/Front-end)\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import \"./App.css\";\nimport Header from \"./View/Header\";\nimport Container from \"./View/Container\";\nimport \"./scss/main.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Container></Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}